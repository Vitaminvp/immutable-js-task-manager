// Core
import { List } from 'immutable';

// Instruments
import { sum, memoize } from '../helpers';

console.log('üôÇ –•–æ—Ä–æ—à–∞—è –º–µ–º–æ–∏–∑–∞—Ü–∏—è');
const memoSumGood = memoize(sum);

const list1 = List([ ...Array(1000000).keys() ]);

console.time('memoSumGood ‚Äî first call');
memoSumGood(list1);
console.timeEnd('memoSumGood ‚Äî first call');
console.time('memoSumGood ‚Äî second call');
memoSumGood(list1); // –ë–µ—Å–ø–ª–∞—Ç–Ω–æ! :)
console.timeEnd('memoSumGood ‚Äî second call');
console.time('memoSumGood ‚Äî third call');
memoSumGood(list1); // –ë–µ—Å–ø–ª–∞—Ç–Ω–æ! :)
console.timeEnd('memoSumGood ‚Äî third call');

console.log('‚ôªÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏');
const list2 = list1.push(1);

console.time('memoSumGood ‚Äî fourth call');
memoSumGood(list2);
console.timeEnd('memoSumGood ‚Äî fourth call');
console.time('memoSumGood ‚Äî fifth call');
memoSumGood(list2); // –ë–µ—Å–ø–ª–∞—Ç–Ω–æ! :)
console.timeEnd('memoSumGood ‚Äî fifth call');
console.time('memoSumGood ‚Äî sixth call');
memoSumGood(list2); // –ë–µ—Å–ø–ª–∞—Ç–Ω–æ! :)
console.timeEnd('memoSumGood ‚Äî sixth call');
